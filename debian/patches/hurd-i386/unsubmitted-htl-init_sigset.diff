Reverting this for now until it is fixed: it breaks sudo

commit d482ebfa67850976485fdf061cd52427eb8a3cb7
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Wed Nov 11 12:49:10 2020 +0000

    htl: Keep thread signals blocked during its initialization
    
    One may send signals immediately after creating a thread. We need to block them
    until the thread is ready to run signal handlers.

diff --git b/htl/pt-create.c a/htl/pt-create.c
index 9364c40453..7ac875cbf7 100644
--- b/htl/pt-create.c
+++ a/htl/pt-create.c
@@ -46,8 +46,6 @@ unsigned int __pthread_total;
 static void
 entry_point (struct __pthread *self, void *(*start_routine) (void *), void *arg)
 {
-  int err;
-
   ___pthread_self = self;
   __resp = &self->res_state;
 
@@ -62,10 +60,6 @@ entry_point (struct __pthread *self, void *(*start_routine) (void *), void *arg)
 
   __pthread_startup ();
 
-  /* We can now unleash signals.  */
-  err = __pthread_sigstate (self, SIG_SETMASK, &self->init_sigset, 0, 0);
-  assert_perror (err);
-
   if (self->c11)
     {
       /* The function pointer of the c11 thread start is cast to an incorrect
@@ -207,13 +201,11 @@ __pthread_create_internal (struct __pthread **thread,
      shall be empty."  If the currnet thread is not a pthread then we
      just inherit the process' sigmask.  */
   if (__pthread_num_threads == 1)
-    err = __sigprocmask (0, 0, &pthread->init_sigset);
+    err = __sigprocmask (0, 0, &sigset);
   else
-    err = __pthread_sigstate (_pthread_self (), 0, 0, &pthread->init_sigset, 0);
+    err = __pthread_sigstate (_pthread_self (), 0, 0, &sigset, 0);
   assert_perror (err);
 
-  /* But block the signals for now, until the thread is fully initialized.  */
-  __sigfillset (&sigset);
   err = __pthread_sigstate (pthread, SIG_SETMASK, &sigset, 0, 1);
   assert_perror (err);
 
diff --git b/htl/pt-internal.h a/htl/pt-internal.h
index 9dffa0e32e..e0baa6bcda 100644
--- b/htl/pt-internal.h
+++ a/htl/pt-internal.h
@@ -102,9 +102,6 @@ struct __pthread
   /* Indicates whether is a C11 thread created by thrd_creat.  */
   bool c11;
 
-  /* Initial sigset for the thread.  */
-  sigset_t init_sigset;
-
   /* Thread context.  */
   struct pthread_mcontext mcontext;
 
